1. Preparation

    Backups: Ensure you have current backups of your website and server configuration.
    Check Dependencies: Make sure your system is up to date.
# Run the command below.
dnf update -y

2. Install Varnish

Add the Varnish 7.5 repository and install Varnish.
# Run the command below.
curl -s https://packagecloud.io/install/repositories/varnishcache/varnish75/script.rpm.sh | bash
dnf install varnish -y

3. Install Hitch

Install Hitch, a lightweight TLS proxy that works well with Varnish.
# Run the command below.
dnf install hitch -y

4. Configure Varnish

Configure Varnish to listen on port 80 instead of the default 6081.
Step 1: Edit the Varnish service configuration

Copy the Varnish service file to /etc/systemd/system and modify it:
# Run the command below.
cp /usr/lib/systemd/system/varnish.service /etc/systemd/system/

Edit /etc/systemd/system/varnish.service and change the listening port from 6081 to 80:
ExecStart=/usr/sbin/varnishd \
  -a :80 \
  -a localhost:4443,PROXY \
  -T localhost:6082 \
  -f /etc/varnish/default.vcl \
  -S /etc/varnish/secret \
  -s malloc,256m

5. Configure Apache

Change Apache to listen on port 8080.

Edit the file /etc/httpd/conf/httpd.conf and change:
Listen 80

to:

Listen 8080

Update the virtual host configurations if necessary to ensure they are listening on the correct port.
6. Configure Hitch

Configure Hitch to handle TLS and forward requests to Varnish on port 4443.
Step 1: Edit the Hitch configuration

Edit /etc/hitch/hitch.conf to set up the TLS termination and forwarding to Varnish. Add the ssl-cert and ssl-key fields:
frontend = "[*]:443"
backend = "[127.0.0.1]:4443"
workers = 4
user = "hitch"
group = "hitch"
ciphers = "HIGH"
ssl-cert = "/etc/ssl/certs/yourcert.crt"
ssl-key = "/etc/ssl/private/yourkey.key"
write-proxy-v2 = on

Make sure to replace /etc/ssl/certs/yourcert.crt and /etc/ssl/private/yourkey.key with the paths to your SSL certificate and key.
7. Enable and Start Services

Enable and start the Varnish, Hitch, and Apache services.
# Run the command below.
systemctl enable varnish hitch
systemctl start varnish hitch

Alternatively, you can enable and start both services in one command:
# Run the command below.
systemctl enable --now varnish hitch

8. Configure WHM/cPanel

To ensure updates do not overwrite your custom configurations, create custom templates and use EasyApache.
Step 1: Create custom templates for Apache

Copy the default templates to the custom template directory and modify them to retain your port settings.
# Run the command below.
mkdir -p /var/cpanel/templates/apache2/custom
cp /var/cpanel/templates/apache2/main.default /var/cpanel/templates/apache2/custom/main.local

Edit /var/cpanel/templates/apache2/custom/main.local to change the Apache listening port to 8080.
# Example change in the template file
<IfModule mpm_prefork_module>
    Listen 8080
</IfModule>
<IfModule mpm_worker_module>
    Listen 8080
</IfModule>
<IfModule mpm_event_module>
    Listen 8080
</IfModule>

Step 2: Rebuild Apache configuration

Rebuild the Apache configuration and restart the service:
# Run the command below.
/scripts/rebuildhttpdconf
systemctl restart httpd

9. Monitoring and Maintenance

Set up a lightweight monitoring tool to alert you of any issues with Varnish or Hitch.
Step 1: Install Monit
# Run the command below.
dnf install monit -y

Step 2: Configure Monit for Varnish and Hitch

Create configuration files for Varnish and Hitch in the Monit configuration directory.
# Run the command below.
touch /etc/monit.d/varnish
touch /etc/monit.d/hitch

Add the following content to /etc/monit.d/varnish:
check process varnish with pidfile /var/run/varnishd.pid
    start program = "/usr/bin/systemctl start varnish"
    stop program = "/usr/bin/systemctl stop varnish"
    if failed host 127.0.0.1 port 4443 protocol http
        then alert
    if 5 restarts within 5 cycles then timeout
    alert youremail@example.com

Add the following content to /etc/monit.d/hitch:
check process hitch with pidfile /run/hitch/hitch.pid
    start program = "/usr/bin/systemctl start hitch"
    stop program = "/usr/bin/systemctl stop hitch"
    if failed port 443 type tcpssl
        with timeout 15 seconds
        then alert
    if 5 restarts within 5 cycles then timeout
    alert youremail@example.com

Step 3: Enable and Start Monit
# Run the command below.
systemctl enable monit
systemctl start monit

Step 4: Test the Configuration

You can test the configuration by simulating a failure:
# Run the command below.
systemctl stop varnish
systemctl stop hitch

Check Monit status and ensure it detects the stopped services and attempts to restart them.
# Run the command below.
monit status

Ensure you receive email alerts by verifying the email settings in /etc/monitrc.
# Example email configuration in /etc/monitrc
set mailserver smtp.example.com port 587
    username "your-email@example.com" password "your-email-password"
    using tlsv1 with timeout 30 seconds

set alert youremail@example.com

Replace smtp.example.com, your-email@example.com, and your-email-password with your actual SMTP server details and credentials. Reload Monit configuration:
# Run the command below.
monit reload



